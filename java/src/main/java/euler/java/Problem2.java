package euler.java;

/**
 * Problem 2 (Fibonacci Even Summation)
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * <pre>1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...</pre>
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 *
 * @author Ryo TANAKA
 * @since 1.0
 */
public class Problem2 {
    public static void main(String... args) {
        System.out.println(new Problem2().fibEvenSum(4000000));
    }

    public long fibEvenSum(int max) {
        long before = 0L;
        long current = 1L;
        long result = 0L;
        while(current < max) {
            long next = before + current;
            if (next < max && next % 2 == 0) {
                result += next;
            }
            before = current;
            current = next;
        }
        return result;
    }
}
